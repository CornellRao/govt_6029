fct_relevel(poordisc_r, "strongly disagree", "somewhat disagree",
"somewhat agree", "strongly agree"))
lns %>%
group_by(newgen) %>%
count(poord_r) %>%
mutate(prop = prop.table(n)) %>%
na.omit()
poor_can<- lns %>%
group_by(newgen) %>%
count(poord_r) %>%
mutate(prop = prop.table(n)) %>%
na.omit()
View(poor_can)
View(poor_can)
ggplot(poor_can, aes(x=factor(newgen),
y = prop, fill = poord_r)) +
geom_bar(stat= "identity")
ggplot(poor_can, aes(x = factor(newgen), y = prop,
fill = poord_r)) +
geom_bar(stat= "identity") +
labs(x = "Generation",
y = "Proportion",
title= "Poor people can get ahead if they work hard",
fill =  "Support") +
scale_fill_brewer(palette = "Dark2")
ggplot(poor_can, aes(x = factor(newgen), y = prop,
fill = poord_r)) +
geom_bar(stat= "identity") +
labs(x = "Generation",
y = "Proportion",
title= "Poor people can get ahead if they work hard",
fill =  "Support")
ggplot(poor_can, aes(x = factor(newgen), y = prop,
fill = poord_r)) +
geom_bar(stat= "identity") +
labs(x = "Generation",
y = "Proportion",
title= "Poor people can get ahead if they work hard",
fill =  "Support") +
scale_fill_brewer(palette = "Dark2") +
theme_minimal()
ggplot(poor_can, aes(x = factor(newgen), y = prop,
fill = poord_r)) +
geom_bar(stat= "identity") +
labs(x = "Generation",
y = "Proportion",
title= "Poor people can get ahead if they work hard",
fill =  "Support") +
scale_fill_brewer(palette = " BrBG") +
theme_minimal()
ggplot(poor_can, aes(x = factor(newgen), y = prop,
fill = poord_r)) +
geom_bar(stat= "identity") +
labs(x = "Generation",
y = "Proportion",
title= "Poor people can get ahead if they work hard",
fill =  "Support") +
scale_fill_brewer(palette = "BrBG") +
theme_minimal()
ggplot(poor_can, aes(x = factor(newgen), y = prop,
fill = poord_r)) +
geom_bar(stat= "identity") +
labs(x = "Generation",
y = "Proportion",
title= "Poor people can get ahead if they work hard",
fill =  "Support") +
scale_fill_brewer(palette = "BrBG") +
theme_minimal()
lns <- lns %>%  mutate(latdisc_r =  recode(latdisc, 'dk' = NA_character_))
latinos_can<- lns %>%
group_by(newgen) %>%
count(latdisc_r) %>%
mutate(prop = prop.table(n)) %>%
na.omit()
ggplot(latinos_can, aes(x = factor(newgen), y = prop,
fill = latdisc_r)) +
geom_bar(stat= "identity") +
theme_minimal() +
labs(x = "Generation",
y = "Proportion",
title= "Latinos can get ahead if they work hard",
fill = "Support") +
scale_fill_brewer(palette = "Set2") +
scale_x_discrete(labels = c("First", "1.5ers", "Second", "Third", "Fourth"))
ggplot(latinos_can, aes(x = factor(newgen), y = prop,
fill = latdisc_r)) +
geom_bar(stat= "identity") +
theme_minimal() +
labs(x = "Generation",
y = "Proportion",
title= "Latinos can get ahead if they work hard",
fill = "Support") +
scale_fill_brewer(palette = "PiYG") +
scale_x_discrete(labels = c("First", "1.5ers", "Second", "Third", "Fourth"))
latinos_can<- lns %>%
group_by(newgen) %>%
count(latdisc_r) %>%
mutate(prop = prop.table(n)) %>%
na.omit()
ggplot(latinos_can, aes(x = factor(newgen), y = prop,
fill = latdisc_r)) +
geom_bar(stat= "identity") +
theme_minimal() +
labs(x = "Generation",
y = "Proportion",
title= "Latinos can get ahead if they work hard",
fill = "Support") +
scale_fill_brewer(palette = "PiYG") +
scale_x_discrete(labels = c("First", "1.5ers", "Second", "Third", "Fourth"))
lns %>% count(whydisc)
lns<- lns %>% mutate(whydisc_r = recode(whydisc, "dk/na" = NA_character_))
prop.table(table(lns$whydisc_r,lns$newgen), 2)
prop.table(table(lns$whydisc_r,lns$newgen), 2)
prop.table(table(lns$whydisc_r,lns$newgen), 2) %>% pander()
lns <- lns %>% mutate(discindex  = dfired_r + dbadpol_r+ dhousing_r+drestaur_r)
prop.table(table(lns$discindx))
prop.table(table(lns$discindx, lns$newgen), 2)*100
lns$poord_r <- as.numeric(lns$poord_r)
summary(model1<-lm(poord_r ~ newgen, data = lns))
hypdata<- data.frame(newgen=c(1,2))
predict(model1, hypdata)
hypdata<- data.frame(newgen=c(1, 1.5, 4))
predict(model1, hypdata)
summary(fullmodel <- lm(poord_r ~ newgen + discindx + trieduc + age + mexican + income + female, data = lns))
hypdata_mex<- lns %>% with(expand.grid(newgen=c(1,4),
discindx = mean(discindx,  na.rm = TRUE),
trieduc = mean(trieduc,  na.rm = TRUE),
age = mean(age,  na.rm = TRUE),
mexican = c(0,1),
income = mean(income,  na.rm = TRUE),
female = mean(female,  na.rm = TRUE)))
hypdata_mex
predict_df_mex <- predict(fullmodel, hypdata_mex, interval = "confidence", level = .90)
predict_df_mex
plot_predicts_mex <- cbind(predict_df_mex, hypdata_mex)
plot_predicts_mex
ggplot(plot_predicts_mex, aes(y = fit, x = factor(newgen),
color = factor(mexican),
ymin = lwr,
ymax= upr)) +
geom_pointrange(size = 1, position = position_dodge(width = .5)) +
theme_bw() +
labs(x = "Generation",
y = "Predicted Support",
title = "Poor People Can Get Ahead in Life if They Work Hard by Country of Origin",
color =  "Mexican")
hypdata2<- lns %>% with(expand.grid(newgen= mean(newgen, na.rm = TRUE),
discindx = seq(1,4),
trieduc = mean(trieduc,  na.rm = TRUE),
age = mean(age,  na.rm = TRUE),
mexican = mean(mexican,  na.rm = TRUE),
income = mean(income,  na.rm = TRUE),
female = mean(female,  na.rm = TRUE)))
hypdata2<- lns %>% with(expand.grid(newgen= mean(newgen, na.rm = TRUE),
discindx = seq(1,4),
trieduc = mean(trieduc,  na.rm = TRUE),
age = mean(age,  na.rm = TRUE),
mexican = mean(mexican,  na.rm = TRUE),
income = mean(income,  na.rm = TRUE),
female = mean(female,  na.rm = TRUE)))
predict_df2 <- predict(fullmodel, hypdata2, interval = "confidence")
plot_predicts2 <- cbind(predict_df2, hypdata2)
ggplot(plot_predicts2, aes(x = discindx, y = fit,
ymin = lwr,
ymax= upr)) +
geom_line() +
geom_ribbon(alpha = .6) +
theme_bw() +
labs(x = "Discrimination Index",
y = "Predicted Support",
title = "Poor People Can Get Ahead in Life if They Work Hard")
setwd("C:/Users/sig35/Google Drive/Work/Teaching/Students/Adrienne/ARAProject")
library(readr)
library(plyr)
library(tidyverse)
library(labelled)
library(tidyverse)
library(pander)
library(forcats)
library(stargazer)
SIPP <- read_csv("SIPP2004_as.csv")
SIPP$workcash <- factor(SIPP$workcash,
levels = c(1,2,-1),
labels = c("yes", "no", .default = NA_character_))
#2
SIPP$cash <- factor(SIPP$cash,
levels = c(1,2,-1),
labels = c("yes", "no", .default = NA_character_))
#3
SIPP$cashgvt <- factor(SIPP$cashgvt,
levels = c(1,2,3,-1),
labels = c("federal","state", "local", .default = NA_character_))
#4
SIPP$cashcommtype <- factor(SIPP$cashcommtype,
levels = c(1,2,-1),
labels = c("yes", "no", .default = NA_character_))
#5
SIPP$cashgovttype <- factor(SIPP$cashgovttype,
levels = c(1,2,-1),
labels = c("yes", "no", .default = NA_character_))
#6
SIPP$shorttermcash2 <- factor(SIPP$shorttermcash2,
levels = c(1,2,-1),
labels = c("yes", "no", .default = NA_character_))
#7
SIPP$foodassistance <- factor(SIPP$foodassistance,
levels = c(1,2,-1),
labels = c("yes", "no", .default = NA_character_))
SIPP %>% count(earnedincome)
SIPP <- read_csv("SIPP2004_as.csv")
#1
SIPP$workcash <- factor(SIPP$workcash,
levels = c(1,2,-1),
labels = c("yes", "no", .default = NA_character_))
#2
SIPP$cash <- factor(SIPP$cash,
levels = c(1,2,-1),
labels = c("yes", "no", .default = NA_character_))
#3
SIPP$cashgvt <- factor(SIPP$cashgvt,
levels = c(1,2,3,-1),
labels = c("federal","state", "local", .default = NA_character_))
#4
SIPP$cashcommtype <- factor(SIPP$cashcommtype,
levels = c(1,2,-1),
labels = c("yes", "no", .default = NA_character_))
#5
SIPP$cashgovttype <- factor(SIPP$cashgovttype,
levels = c(1,2,-1),
labels = c("yes", "no", .default = NA_character_))
#6
SIPP$shorttermcash2 <- factor(SIPP$shorttermcash2,
levels = c(1,2,-1),
labels = c("yes", "no", .default = NA_character_))
#7
SIPP$foodassistance <- factor(SIPP$foodassistance,
levels = c(1,2,-1),
labels = c("yes", "no", .default = NA_character_))
#8 - later
#9
SIPP$foodassistancecomm <- factor(SIPP$foodassistancecomm,
levels = c(1,2,-1),
labels = c("yes", "no", .default = NA_character_))
#10
SIPP$foodassistancecomm2 <- factor(SIPP$foodassistancecomm2,
levels = c(1,2,-1),
labels = c("yes", "no", .default = NA_character_))
#11 - problem with the voucher variables
SIPP$foodvouchers <- factor(SIPP$foodvoucher,
levels = c(1,2,-1),
labels = c("yes", "no", .default = NA_character_))
#12
SIPP$foodvoucher2 <- factor(SIPP$foodvouchers2,
levels = c(1,2,-1),
labels = c("yes", "no", .default = NA_character_))
#13
SIPP$foodvoucher3 <- factor(SIPP$foodvouchers3,
levels = c(1,2,-1),
labels = c("yes", "no", .default = NA_character_))
#14
SIPP$foodassistanceISS <- factor(SIPP$foodassistanceISS,
levels = c(1,2,-1),
labels = c("yes", "no", .default = NA_character_))
#15
SIPP$State <- factor(SIPP$State,
levels = c(1,2,4,5,6,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,53,54,55,56),
labels = c("Alabama","Alaska","Arizona","Arkansas","California",
"Colorado","Connecticut","Delaware","DC","Florida",
"Georgia","Hawaii","Idaho","Illinois",
"Indiana","Iowa","Kansas","Kentucky","Louisiana",
"Maine","Maryland","Massachusetts","Michigan",
"Minnesota","Mississippi","Missouri","Montana",
"Nebraska", "Nevada","New Hampshire","New Jersey",
"New Mexico","New York","North Carolina","North Dakota",
"Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island",
"South Carolina","South Dakota","Tennessee","Texas",
"Utah","Vermont","Virginia","Washington","West Virginia",
"Wisconsin","Wyoming"))
#16
SIPP$class <- factor(SIPP$class,
levels = c(1,2,3,4,5,6,-1),
labels = c("Private for profit employee", "Private not for profit employee",
"Local government worker", "State government worker",
"Federal government worker", "Family worker without pay", .default = NA_character_))
#17
SIPP$race <- factor(SIPP$race,
levels = c(1:4),
labels = c("White", "Black", "Asian", .default = NA_character_))
#18
SIPP$maritalstatus <- factor(SIPP$maritalstatus,
levels = c(1:6),
labels = c("Married, spouse present", "Married, spouse absent",
"Widowed", "Divorced", "Separated", "Never Married"))
#19
SIPP$sex <- factor(SIPP$sex,
levels = c(1,2),
labels = c("Male", "Female"))
#20
SIPP$family <- factor(SIPP$family,
levels = c(1:3),
labels = c("Headed by Husband/Wife", "Male Headed", "Female Headed"))
#21
SIPP$household <- factor(SIPP$household,
levels = c(1:6),
labels = c("Family HH: Married couple", "Family HH: Male householder",
"Family HH: Female householder", "Nonfamily HH: Male householder nonfamily household",
"Family HHL Female householder nonfamily household", "Group Quarters"))
#22 - age: restructure by age groups
#23 - restructure this one also
SIPP$education <- factor(SIPP$education,
levels = c(1,2,3,4,5,6,7,8,9,10,-1),
labels = c("No vocational certificate or under 18, less than high school education",
"No vocational certificate or under 18, high school diploma",
"No vocational certificate or under 18, less than one year of college, no degree",
"No vocational certificate or under 18, one or more years of college, no degree",
"No vocational certificate or under 18, associate degree or higher degree",
"Vocational certificate, less than high school education",
"Vocational certificate, high school diploma",
"Vocational certificate, less than one year of college, no degree",
"Vocational certificate, one or more years of college, no degree",
"Vocational certificate, associate degree, or higher degree",
.default = NA_character_))
#24 |income variables| - earnedincome(thearn), income (thtotinc), income, unempincome, govtincome
#25 - govtincome2??
save(SIPP,file="SIPP_clean.Rdata")
#Preliminary Analysis
#CLASS
SIPP %>% count(class) %>%
mutate(pct = prop.table(n)) %>% pander()
ggplot(SIPP, aes(x = class)) +
geom_bar() +
coord_flip()
ggplot(SIPP, aes(x =
class %>%
fct_infreq %>%
fct_rev())) +
geom_bar(fill = "#66c2a5") +
coord_flip() +
labs(x = "",
y = "class",
title= "Distribution of workers") +
theme_minimal()
summary(SIPP$income) #this has negative values, use earned income instead
summary(SIPP$earnedincome) #Recode Earned Income - intervals?
summary(model<-lm(earnedincome ~ race, data = SIPP))
predict(model)
SIPP <- read_csv("SIPP2004_as.csv")
names(SIPP)
SIPP %>% filter(thtotinc <1) %>%
count()
SIPP %>% filter(income <1) %>%
count()
SIPP %>% filter(income <1) %>% summary()
SIPP %>% filter(income <1) %>% head()
shortdf<-SIPP %>% filter(income <1)
shortdf$income
unique(shortdf$income)
table(shortdf$income)
setwd("C:/Users/sig35/Google Drive/Work/Teaching/Courses/Advanced Regression Analysis/student_data/Strongwater")
read_csv("wardata.csv")
df<-read_csv("wardata.csv")
names(df)
waryrs$cum_count <- with(dd, cumsum(waryrs==1))
waryrs$cum_count <- with(df, cumsum(waryrs==1))
waryrs$cum_count <- with(df, cumsum(war==1))
df$waryrs <- with(df, cumsum(war==1))
head(df)
View(df)
df <- df %>% select(war)
df$waryrs <- with(df, cumsum(war==1))
head(df)
df
View(df)
df <- df %>% select(war, year)
df<-read_csv("wardata.csv")
names(df)
df <- df %>% select(war, year)
df$waryrs <- with(df, cumsum(war==1))
head(df)
View(df)
cumsum(war)
df<-mutate(waryrs = cumsum(war))
df <- war %>% mutate(waryrs = cumsum(war))
df<-read_csv("wardata.csv")
names(df)
df <- df %>% select(war, year)
df <- war %>% mutate(waryrs = cumsum(war))
df <- war %$% mutate(waryrs = cumsum(war))
library(magrittr)
df <- war %$% mutate(waryrs = cumsum(war))
df <- war %$% mutate(waryrs = cumsum(df$war))
df<-read_csv("wardata.csv")
names(df)
df <- df %>% select(war, year)
df
df <- dfr %>% mutate(waryrs = cumsum(war))
df <- df %>% mutate(waryrs = cumsum(war))
df<-read_csv("wardata.csv")
names(df)
df %>%
group_by(idx = cumsum(war == 1)) %>%
mutate(counter = row_number()) %>%
ungroup %>%
select(-idx)
df <- df %>% select(war, year)
df %>%
group_by(idx = cumsum(war == 1)) %>%
mutate(counter = row_number()) %>%
ungroup %>%
select(-idx)
df<p-df %>%
group_by(idx = cumsum(war == 1)) %>%
mutate(counter = row_number()) %>%
ungroup %>%
select(-idx)
dfp<-df %>%
group_by(idx = cumsum(war == 1)) %>%
mutate(counter = row_number()) %>%
ungroup %>%
select(-idx)
dfp
View(dfp)
dfp<-df %>%
group_by(idx = cumsum(war == 1L)) %>%
mutate(counter = row_number()) %>%
ungroup %>%
select(-idx)
View(dfp)
dfp<-df %>%
group_by(idx = cumsum(war == 0)) %>%
mutate(counter = row_number()) %>%
ungroup %>%
select(-idx)
View(dfp)
mutate(counter = (row_number()-1) %>%
View(dfp)
View(dfp)
df<-read_csv("wardata.csv")
df <- df %>% select(war, year)
select(-idx)
df <- df %>% select(war, year)
group_by(idx = cumsum(war == 0)) %>%
dfp<-df %>%
group_by(idx = cumsum(war == 0)) %>%
mutate(counter = (row_number()-1)) %>%
ungroup %>%
select(-idx)
View(dfp)
dfp<-df %>%
group_by(idx = cumsum(war == 0)) %>%
mutate(waryrs = (row_number()-1)) %>%
ungroup %>%
select(-idx)
df<-read_csv("wardata.csv")
names(df)
dfp<-df %>%
group_by(idx = cumsum(war == 0)) %>%
mutate(waryrs = (row_number()-1)) %>%
ungroup %>%
select(-idx)
View(dfp)
df <- df %>%
group_by(idx = cumsum(war == 0)) %>%
mutate(waryrs = (row_number()-1)) %>%
ungroup %>%
select(-idx)
df<-read_csv("wardata.csv")
df <- df %>% select(war, year)
df <- df %>%
group_by(idx = cumsum(war == 0)) %>%
mutate(waryrs = (row_number()-1)) %>%
ungroup %>%
select(-idx)
View(df)
suppressPackageStartupMessages({
library("ggplot2")
library("dplyr")
l
})
suppressPackageStartupMessages({
library("ggplot2")
library("dplyr")
library("alr4")
})
suppressPackageStartupMessages({
library("ggplot2")
library("dplyr")
library("alr4")
})
data("Challeng")
summary(Challeng)
ggplot(Challeng, aes(x = temp, y = damage))
challenger_plot_1 <-   ggplot(Challeng, aes(x = temp, y = damage)) +
geom_point()
challenger_plot_1
challenger_model1 <- lm(damage ~ temp, data = Challeng)
summary(challenger_model1)
predict(challenger_model1, newdata = data.frame(temp = 31))
challenger_plot_1 + geom_smooth(method = "lm")
Challeng <- mutate(Challeng, anydamage = as.integer(damage > 0))
summary(Challeng)
ggplot(Challeng, aes(x = temp, y = anydamage)) +
geom_point()
challenger_model_2 <- glm(anydamage ~ temp, family = "binomial",
data = Challeng)
summary(challenger_model_2)
ggplot(Challeng, aes(x = temp, y = anydamage)) +
geom_point() +
geom_smooth(method = "glm", method.args = list(family = "binomial"), se = F)
ggplot(Challeng, aes(x = temp, y = anydamage)) +
geom_point() +
geom_smooth(method = "glm", method.args = list(family = "binomial"), level = .80)
